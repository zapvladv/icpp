# .github/workflows/build.yml
name: Build and Release
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [arm-linux-gnueabihf, aarch64-linux-gnu, x86_64-linux-gnu]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install cross-compiler
        run: sudo apt-get install gcc-${{ matrix.target }} g++-${{ matrix.target }}
      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.target }}-gcc -DCMAKE_CXX_COMPILER=${{ matrix.target }}-g++
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release --target hello_world -- -j 4
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hello_world-${{ matrix.target }}
          path: ${{ github.workspace }}/build/hello_world

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release assets
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hello_world-${{ matrix.target }}
          asset_name: hello_world-${{ matrix.target }}
          asset_content_type: application/octet-stream

